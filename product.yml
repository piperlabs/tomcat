schema-version: 1.0

products:
  - origin: aws-jdk
    alias: jdk
    var:
      version: "{% jdkVersion %}"

ports:
  - "{% httpPort %}"

persistent-dirs:
  - name: webapps
    intern: "{% webapps %}"
    extern: "."
    owner: "{% user %}"


const:
  product: apache-tomcat-{% version %}
  catalinaHome: "{% installDir %}/{% product %}"
  webapps: "{% catalinaHome %}/webapps"

var:
  version: 8.5.53
  httpPort: "8080"
  user: default
  jdkVersion: "8"
  timeout: "5"

user: "{% user %}"
envs:
  - CATALINA_OPTS=


provision:
  - url: http://archive.apache.org/dist/tomcat/tomcat-{{ majorVersion .product.version }}/v{% version %}/bin/{% product %}.tar.gz
  - env: CATALINA_HOME={% catalinaHome %}
  - env: CATALINA_PID=/home/{% user %}/catalina.pid
  - systempath: "{% catalinaHome %}/bin"
  - permission:
      path: "{% catalinaHome %}"
      owner: "{% user %}"
      recursive: true

deploy:
  - copy:
      from: "{{ .resources }}/webapps"
      topath: "{% catalinaHome %}/webapps"

up: start-tomcat
 
down: stop-tomcat

command:
  start-tomcat:
    async: true
    cmd: "{{ .templates }}/start.sh"
    condition: curl -I "localhost:{% httpPort %}"
  stop-tomcat:
    container:
      create: false
    cmd: "{{ .templates }}/stop.sh"
   